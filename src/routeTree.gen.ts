/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AccountRouteImport } from './routes/account'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PortfoliosPortfolioIdRouteImport } from './routes/portfolios/$portfolioId'
import { Route as PortfoliosPortfolioIdInvestmentsInvestmentIdRouteImport } from './routes/portfolios_.$portfolioId_.investments_.$investmentId'

const AccountRoute = AccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PortfoliosPortfolioIdRoute = PortfoliosPortfolioIdRouteImport.update({
  id: '/portfolios/$portfolioId',
  path: '/portfolios/$portfolioId',
  getParentRoute: () => rootRouteImport,
} as any)
const PortfoliosPortfolioIdInvestmentsInvestmentIdRoute =
  PortfoliosPortfolioIdInvestmentsInvestmentIdRouteImport.update({
    id: '/portfolios_/$portfolioId_/investments_/$investmentId',
    path: '/portfolios/$portfolioId/investments/$investmentId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/portfolios/$portfolioId': typeof PortfoliosPortfolioIdRoute
  '/portfolios/$portfolioId/investments/$investmentId': typeof PortfoliosPortfolioIdInvestmentsInvestmentIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/portfolios/$portfolioId': typeof PortfoliosPortfolioIdRoute
  '/portfolios/$portfolioId/investments/$investmentId': typeof PortfoliosPortfolioIdInvestmentsInvestmentIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/portfolios/$portfolioId': typeof PortfoliosPortfolioIdRoute
  '/portfolios_/$portfolioId_/investments_/$investmentId': typeof PortfoliosPortfolioIdInvestmentsInvestmentIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/portfolios/$portfolioId'
    | '/portfolios/$portfolioId/investments/$investmentId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/account'
    | '/portfolios/$portfolioId'
    | '/portfolios/$portfolioId/investments/$investmentId'
  id:
    | '__root__'
    | '/'
    | '/account'
    | '/portfolios/$portfolioId'
    | '/portfolios_/$portfolioId_/investments_/$investmentId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountRoute: typeof AccountRoute
  PortfoliosPortfolioIdRoute: typeof PortfoliosPortfolioIdRoute
  PortfoliosPortfolioIdInvestmentsInvestmentIdRoute: typeof PortfoliosPortfolioIdInvestmentsInvestmentIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/portfolios/$portfolioId': {
      id: '/portfolios/$portfolioId'
      path: '/portfolios/$portfolioId'
      fullPath: '/portfolios/$portfolioId'
      preLoaderRoute: typeof PortfoliosPortfolioIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/portfolios_/$portfolioId_/investments_/$investmentId': {
      id: '/portfolios_/$portfolioId_/investments_/$investmentId'
      path: '/portfolios/$portfolioId/investments/$investmentId'
      fullPath: '/portfolios/$portfolioId/investments/$investmentId'
      preLoaderRoute: typeof PortfoliosPortfolioIdInvestmentsInvestmentIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountRoute: AccountRoute,
  PortfoliosPortfolioIdRoute: PortfoliosPortfolioIdRoute,
  PortfoliosPortfolioIdInvestmentsInvestmentIdRoute:
    PortfoliosPortfolioIdInvestmentsInvestmentIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
